{"version":3,"sources":["webpack:///./src/components/landing-bio.js","webpack:///./src/components/particles-bg.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["Container","Object","styled_base_browser_esm","target","name","styles","OuterContainer","Title","NameHeader","propTypes","siteTitle","PropTypes","string","defaultProps","LandingBio","core_browser_esm","gatsby_browser_entry","query","render","data","site","siteMetadata","title","_3166893351","position","top","left","zIndex","ParticlesBG","particles_default","a","params","particlesParams","style","React","PureComponent","IndexPage","layout","seo","keywords","particles_bg","landing_bio","_1212797966","StaticQueryContext","createContext","StaticQuery","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","children","object","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","Content","NavLink","Link","GitHubLink","HomeLink","SiteHeader","Header","to","href","GatsbyLink","Footer","Layout","react_default","Fragment","header","layout_Content","Date","getFullYear","_3471169940","node","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-f4c904518c02ff821ae4.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nconst Container = styled.div`\n  text-align: center;\n`\n\nconst OuterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  height: 78vh;\n`\n\nconst Title = styled.p`\n  padding: 0;\n  margin-bottom: 1rem;\n  font-size: 1.4rem;\n  @media (max-width: 425px) {\n    font-size: 1.2rem;\n  }\n`\n\n// const Description = styled.p`\n//   padding: 0;\n//   margin-bottom: 1rem;\n//   font-size: 1.2rem;\n//   @media (max-width: 425px) {\n//     font-size: 1rem;\n//   }\n// `\n\nconst NameHeader = styled.h1`\n  font-size: 3.5rem;\n  margin-bottom: 20px;\n  @media (max-width: 425px) {\n    font-size: 2.5rem;\n  }\n`\n\nconst LandingBio = () => (\n  <StaticQuery\n    query={graphql`\n      query LandingSiteTitleQuery {\n        site {\n          siteMetadata {\n            name\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => (\n      <OuterContainer>\n        <Container>\n          <NameHeader>{data.site.siteMetadata.name}</NameHeader>\n          <Title>{data.site.siteMetadata.title}</Title>\n        </Container>\n      </OuterContainer>\n    )}\n  />\n)\n\nNameHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nNameHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default LandingBio\n","import React from \"react\"\nimport Particles from \"react-particles-js\"\nimport particlesParams from \"../static/particles.json\"\n\nconst styles = {\n  position: \"fixed\",\n  top: \"0\",\n  left: \"0\",\n  zIndex: -99,\n}\n\nclass ParticlesBG extends React.PureComponent {\n  render() {\n    return <Particles params={particlesParams} style={styles} />\n  }\n}\nexport default ParticlesBG\n","import React from \"react\"\nimport LandingBio from \"../components/landing-bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Particles from \"../components/particles-bg\"\n\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst IndexPage = () => (\n  <StaticQuery\n    query={graphql`\n      query PageTitleQuery {\n        site {\n          siteMetadata {\n            name\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Layout>\n        <SEO\n          title={`${data.site.siteMetadata.name}`}\n          keywords={[`gatsby`, `application`, `react`]}\n        />\n        <Particles />\n        <LandingBio />\n      </Layout>\n    )}\n  />\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Content = styled.div`\n  max-width: 860px;\n  padding: 1rem 1.0875rem;\n  font-size: 1.2rem;\n`\n\nconst NavLink = styled(Link)`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst GitHubLink = styled.a`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst HomeLink = styled(NavLink)`\n  margin-left: 0;\n`\n\nconst SiteHeader = styled.header`\n  background: transparent;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n`\n\nconst Header = ({ siteTitle }) => (\n  <SiteHeader>\n    <Content>\n      <p>\n        <HomeLink to=\"/\">{siteTitle}</HomeLink>\n        {/* <NavLink to=\"/blog\">Blog</NavLink> */}\n        <GitHubLink href=\"https://github.com/rahulraghavankklm\">\n          GitHub\n        </GitHubLink>\n      </p>\n    </Content>\n  </SiteHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 0 1.0875rem 1rem;\n  padding-top: 0;\n`\n\nconst GatsbyLink = styled.a`\n  margin-left: 5px;\n`\n\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: center;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            name\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.name} />\n        <Content>\n          <main>{children}</main>\n          <Footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <GatsbyLink href=\"https://www.gatsbyjs.org\">Gatsby</GatsbyLink>\n          </Footer>\n        </Content>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}